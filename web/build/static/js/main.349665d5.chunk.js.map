{"version":3,"sources":["assets/logo.svg","pages/Home/index.tsx","services/api.ts","components/Dropzone/index.tsx","pages/CreatePonto/index.tsx","routes.tsx","App.tsx","index.tsx"],"names":["module","exports","Home","id","className","src","logo","alt","to","api","axios","create","baseURL","Dropzone","onFileUploaded","useState","selectedFileUrl","setSelectedFileUrl","onDrop","useCallback","acceptedFiles","file","fileUrl","URL","createObjectURL","useDropzone","accept","getRootProps","getInputProps","CreatePoint","items","setItems","ufs","setUfs","cidades","setCidades","nome","email","whatsapp","formData","setFormData","selectedUf","setSelectedUf","selectedCidade","setSelectedCidade","selectedPosition","setSelectedPosition","selectedItems","setSelectedItems","selectedFile","setSelectedFile","initialPosition","setInitialPosition","history","useHistory","handleInputChange","e","target","name","value","a","preventDefault","uf","cidade","latitude","longitude","data","FormData","append","String","join","post","alert","push","useEffect","navigator","geolocation","getCurrentPosition","pos","coords","get","then","response","ufSiglas","map","sigla","cidadeNomes","onSubmit","htmlFor","type","onChange","Map","center","zoom","onClick","latlng","lat","lng","TileLayer","attribution","url","Marker","position","key","item","includes","findIndex","filteredItems","filter","handleSelectedItem","img_url","titulo","Routes","component","path","exact","CreatePonto","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.349665d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.47c4581a.svg\";","import React from \"react\";\r\nimport { FiLogIn } from \"react-icons/fi\";\r\nimport \"./Home.css\";\r\nimport logo from \"../../assets/logo.svg\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div id=\"page-home\">\r\n      <div className=\"content\">\r\n        <header>\r\n          <img src={logo} alt=\"Ecoleta\" />\r\n        </header>\r\n        <main>\r\n          <h1>Seu marketplace de coleta de res√≠duos.</h1>\r\n          <p>\r\n            Ajudamos pessoas a encontrarem pontos de coleta de forma eficiente.\r\n          </p>\r\n\r\n          <Link to=\"/create-point\">\r\n            <span>\r\n              <FiLogIn />\r\n            </span>\r\n            <strong>Cadastre um ponto de coleta</strong>\r\n          </Link>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"http://localhost:3333\",\r\n});\r\n\r\nexport default api;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { FiUpload } from \"react-icons/fi\";\r\nimport \"./styles.css\";\r\n\r\ninterface Props {\r\n  onFileUploaded: (file: File) => void;\r\n}\r\n\r\nconst Dropzone: React.FC<Props> = ({ onFileUploaded }) => {\r\n  const [selectedFileUrl, setSelectedFileUrl] = useState(\"\");\r\n\r\n  const onDrop = useCallback(\r\n    (acceptedFiles) => {\r\n      const file = acceptedFiles[0];\r\n\r\n      const fileUrl = URL.createObjectURL(file);\r\n\r\n      setSelectedFileUrl(fileUrl);\r\n      onFileUploaded(file);\r\n    },\r\n    [onFileUploaded]\r\n  );\r\n  const { getRootProps, getInputProps } = useDropzone({\r\n    onDrop,\r\n    accept: \"image/*\",\r\n  });\r\n\r\n  return (\r\n    <div className=\"dropzone\" {...getRootProps()}>\r\n      <input {...getInputProps()} accept=\"image/*\" />\r\n\r\n      {selectedFileUrl ? (\r\n        <img src={selectedFileUrl} alt=\"Imagem do Ponto\" />\r\n      ) : (\r\n        <p>\r\n          <FiUpload />\r\n          Imagem do estabelecimento\r\n        </p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropzone;\r\n","import React, { useEffect, useState, ChangeEvent, FormEvent } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { FiArrowLeft } from \"react-icons/fi\";\r\nimport { Map, TileLayer, Marker } from \"react-leaflet\";\r\nimport { LeafletMouseEvent } from \"leaflet\";\r\nimport api from \"../../services/api\";\r\nimport axios from \"axios\";\r\n\r\nimport Dropzone from \"../../components/Dropzone\";\r\n\r\nimport \"./CreatePoint.css\";\r\n\r\nimport logo from \"../../assets/logo.svg\";\r\n\r\ninterface Item {\r\n  id: number;\r\n  titulo: string;\r\n  img_url: string;\r\n}\r\n\r\ninterface IBGEUFResponse {\r\n  sigla: string;\r\n}\r\n\r\ninterface IBGECidadeResponse {\r\n  nome: string;\r\n}\r\n\r\nconst CreatePoint = () => {\r\n  const [items, setItems] = useState<Item[]>([]);\r\n  const [ufs, setUfs] = useState<string[]>([]);\r\n  const [cidades, setCidades] = useState<string[]>([]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    nome: \"\",\r\n    email: \"\",\r\n    whatsapp: \"\",\r\n  });\r\n\r\n  const [selectedUf, setSelectedUf] = useState(\"0\");\r\n  const [selectedCidade, setSelectedCidade] = useState(\"0\");\r\n  const [selectedPosition, setSelectedPosition] = useState<[number, number]>([\r\n    0,\r\n    0,\r\n  ]);\r\n  const [selectedItems, setSelectedItems] = useState<number[]>([]);\r\n  const [selectedFile, setSelectedFile] = useState<File>();\r\n\r\n  const [initialPosition, setInitialPosition] = useState<[number, number]>([\r\n    0,\r\n    0,\r\n  ]);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    navigator.geolocation.getCurrentPosition((pos) => {\r\n      const { latitude, longitude } = pos.coords;\r\n\r\n      setInitialPosition([latitude, longitude]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    api.get(\"items\").then((response) => {\r\n      setItems(response.data);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get<IBGEUFResponse[]>(\r\n        \"https://servicodados.ibge.gov.br/api/v1/localidades/estados\"\r\n      )\r\n      .then((response) => {\r\n        const ufSiglas = response.data.map((uf) => uf.sigla);\r\n\r\n        setUfs(ufSiglas);\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (selectedUf === \"0\") return;\r\n\r\n    axios\r\n      .get<IBGECidadeResponse[]>(\r\n        `https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUf}/municipios`\r\n      )\r\n      .then((response) => {\r\n        const cidadeNomes = response.data.map((cidade) => cidade.nome);\r\n\r\n        setCidades(cidadeNomes);\r\n      });\r\n  }, [selectedUf]);\r\n\r\n  function handleSelectedUf(e: ChangeEvent<HTMLSelectElement>) {\r\n    const uf = e.target.value;\r\n\r\n    setSelectedUf(uf);\r\n  }\r\n\r\n  function handleSelectedCidade(e: ChangeEvent<HTMLSelectElement>) {\r\n    const cidade = e.target.value;\r\n\r\n    setSelectedCidade(cidade);\r\n  }\r\n\r\n  function handleMapClick(e: LeafletMouseEvent) {\r\n    setSelectedPosition([e.latlng.lat, e.latlng.lng]);\r\n  }\r\n\r\n  function handleInputChange(e: ChangeEvent<HTMLInputElement>) {\r\n    const { name, value } = e.target;\r\n\r\n    setFormData({ ...formData, [name]: value });\r\n  }\r\n\r\n  function handleSelectedItem(id: number) {\r\n    const alreadySelected = selectedItems.findIndex((item) => item === id);\r\n\r\n    if (alreadySelected >= 0) {\r\n      const filteredItems = selectedItems.filter((item) => item !== id);\r\n\r\n      setSelectedItems(filteredItems);\r\n    } else {\r\n      setSelectedItems([...selectedItems, id]);\r\n    }\r\n  }\r\n\r\n  async function handleSubmit(e: FormEvent) {\r\n    e.preventDefault();\r\n    const { nome, email, whatsapp } = formData;\r\n    const uf = selectedUf;\r\n    const cidade = selectedCidade;\r\n    const [latitude, longitude] = selectedPosition;\r\n    const items = selectedItems;\r\n\r\n    const data = new FormData();\r\n\r\n    data.append(\"nome\", nome);\r\n    data.append(\"email\", email);\r\n    data.append(\"whatsapp\", whatsapp);\r\n    data.append(\"uf\", uf);\r\n    data.append(\"cidade\", cidade);\r\n    data.append(\"latitude\", String(latitude));\r\n    data.append(\"longitude\", String(longitude));\r\n    data.append(\"items\", items.join(\",\"));\r\n\r\n    if (selectedFile) {\r\n      data.append(\"img\", selectedFile);\r\n    }\r\n\r\n    await api.post(\"pontos\", data);\r\n\r\n    alert(\"Ponto de Coleta criado!\");\r\n\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div id=\"page-create-point\">\r\n      <header>\r\n        <img src={logo} alt=\"Ecoleta\" />\r\n        <Link to=\"/\">\r\n          <FiArrowLeft />\r\n          Voltar para home\r\n        </Link>\r\n      </header>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>\r\n          Cadastro do <br />\r\n          ponto de coleta\r\n        </h1>\r\n\r\n        <Dropzone onFileUploaded={setSelectedFile} />\r\n\r\n        <fieldset>\r\n          <legend>\r\n            <h2>Dados</h2>\r\n          </legend>\r\n\r\n          <div className=\"field\">\r\n            <label htmlFor=\"name\">Nome da Entidade</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"nome\"\r\n              id=\"name\"\r\n              onChange={handleInputChange}\r\n            />\r\n          </div>\r\n          <div className=\"field-group\">\r\n            <div className=\"field\">\r\n              <label htmlFor=\"email\">E-mail</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                id=\"email\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n              <label htmlFor=\"whatsapp\">WhatsApp</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"whatsapp\"\r\n                id=\"whatsapp\"\r\n                onChange={handleInputChange}\r\n              />\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n          <legend>\r\n            <h2>Endere√ßo</h2>\r\n            <span>Selecione o endere√ßo no mapa</span>\r\n          </legend>\r\n\r\n          <Map center={initialPosition} zoom={15} onClick={handleMapClick}>\r\n            <TileLayer\r\n              attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n              url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n            />\r\n\r\n            <Marker position={selectedPosition} />\r\n          </Map>\r\n\r\n          <div className=\"field-group\">\r\n            <div className=\"field\">\r\n              <label htmlFor=\"uf\">Estado (UF)</label>\r\n              <select\r\n                name=\"uf\"\r\n                id=\"uf\"\r\n                value={selectedUf}\r\n                onChange={handleSelectedUf}\r\n              >\r\n                <option value=\"0\">Selecione uma UF</option>\r\n                {ufs.map((uf) => (\r\n                  <option key={uf} value={uf}>\r\n                    {\" \"}\r\n                    {uf}{\" \"}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n\r\n            <div className=\"field\">\r\n              <label htmlFor=\"cidade\">Cidade</label>\r\n              <select\r\n                name=\"cidade\"\r\n                id=\"city\"\r\n                value={selectedCidade}\r\n                onChange={handleSelectedCidade}\r\n              >\r\n                <option value=\"0\">Selecione uma cidade</option>\r\n                {cidades.map((cidade) => (\r\n                  <option key={cidade} value={cidade}>\r\n                    {\" \"}\r\n                    {cidade}{\" \"}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n\r\n        <fieldset>\r\n          <legend>\r\n            <h2>Itens de Coleta</h2>\r\n            <span>Selecione um ou mais itens abaixo</span>\r\n          </legend>\r\n\r\n          <ul className=\"items-grid\">\r\n            {items.map((item) => (\r\n              <li\r\n                className={selectedItems.includes(item.id) ? \"selected\" : \"\"}\r\n                key={item.id}\r\n                onClick={() => handleSelectedItem(item.id)}\r\n              >\r\n                <img src={item.img_url} alt={item.titulo} />\r\n                <span>{item.titulo}</span>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </fieldset>\r\n\r\n        <button type=\"submit\">Cadastrar ponto de coleta</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatePoint;\r\n","import React from \"react\";\r\nimport { Route, BrowserRouter } from \"react-router-dom\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport CreatePonto from \"./pages/CreatePonto\";\r\n\r\nconst Routes = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Route component={Home} path=\"/\" exact />\r\n      <Route component={CreatePonto} path=\"/create-point\" />\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Routes;\r\n","import React from \"react\";\nimport \"./App.css\";\n\nimport Routes from \"./routes\";\n\nfunction App() {\n  return <Routes />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}